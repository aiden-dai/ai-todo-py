openapi: 3.0.1
info:
  title: Task API
  description: This is a sample api to manage todo tasks
  version: 1.0
servers:
- url: http://localhost:8080/api/
paths:
  /task:
    get:
      summary: Get all tasks
      description: Returns all the tasks
      operationId: get_tasks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                $ref: '#/components/schemas/Task'
    post:
      summary: Create a task
      operationId: add_task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        "400":
          description: Invalid Request
          content: {}
  /task/{taskId}:
    get:
      summary: Get task by ID
      description: Returns a single task
      operationId: get_task_by_id
      parameters:
      - name: taskId
        in: path
        description: ID of task to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
    delete:
      summary: Delete a task
      operationId: delete_task
      parameters:
      - name: taskId
        in: path
        description: Task id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
  /task/{taskId}/done:
    put:
      summary: Udpate task status
      description: Mark a task as completed
      operationId: complete_task
      responses:
        "200":
          description: successful operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
components:
  schemas:
    Task:
      required: 
      - content
      type: object
      properties:
        _id:
          type: string
          description: unique id of the task
        content:
          type: string
          description: unique id of the task
        status:
          type: string
          description: task status
          enum:
          - Pending
          - Done
      example:
        _id: 4201e9d1a
        content: Go shopping
        status: Pending

